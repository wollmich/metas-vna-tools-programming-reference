<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>BigShaker.Start&lt;T&gt;(ObjectiveFunction&lt;T&gt;[], T[][], Int32[][], T[][], Double[][], Double[][], Double[][], Double, InitCompressFunction[], CompressFunction[], BackgroundWorker, DoWorkEventArgs, Boolean, Boolean, String, Int32, Algorithm, String, StoreTempDebugInfoFunction[]) Method</title><meta name="Title" content="Start&lt;T&gt;(ObjectiveFunction&lt;T&gt;[], T[][], Int32[][], T[][], Double[][], Double[][], Double[][], Double, InitCompressFunction[], CompressFunction[], BackgroundWorker, DoWorkEventArgs, Boolean, Boolean, String, Int32, Algorithm, String, StoreTempDebugInfoFunction[])" /><meta name="Help.Id" content="M:Metas.UncLib.Optimization.BigShaker.Start``1(Metas.UncLib.Optimization.ObjectiveFunction{``0}[],``0[][],System.Int32[][],``0[][],System.Double[][],System.Double[][],System.Double[][],System.Double,Metas.UncLib.Optimization.InitCompressFunction[],Metas.UncLib.Optimization.CompressFunction[],System.ComponentModel.BackgroundWorker,System.ComponentModel.DoWorkEventArgs,System.Boolean,System.Boolean,System.String,System.Int32,Metas.UncLib.Optimization.Algorithm,System.String,Metas.UncLib.Optimization.StoreTempDebugInfoFunction[])" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Metas.UncLib.Optimization" /><meta name="guid" content="M_Metas_UncLib_Optimization_BigShaker_Start__1" /><meta name="Description" content="Starts Optimization" /><meta name="tocFile" content="../toc/IDAAB5.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">METAS VNA Tools Help</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Big<wbr />Shaker<span id="LST7C9FCAF1_0" data-languageSpecificText="cpp=::|nu=."></span>Start<span id="LST7C9FCAF1_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST7C9FCAF1_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(<span id="LST7C9FCAF1_3" data-languageSpecificText="cpp=array&lt;"></span>Objective<wbr />Function<span id="LST7C9FCAF1_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST7C9FCAF1_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST7C9FCAF1_6" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_7" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_8" data-languageSpecificText="cpp=array&lt;"></span><span class="typeparameter">T</span><span id="LST7C9FCAF1_9" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_10" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_11" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_12" data-languageSpecificText="cpp=array&lt;"></span>Int<wbr />32<span id="LST7C9FCAF1_13" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_14" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_15" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_16" data-languageSpecificText="cpp=array&lt;"></span><span class="typeparameter">T</span><span id="LST7C9FCAF1_17" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_18" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_19" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_20" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST7C9FCAF1_21" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_22" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_23" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_24" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST7C9FCAF1_25" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_26" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_27" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_28" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LST7C9FCAF1_29" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_30" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, Double, <span id="LST7C9FCAF1_31" data-languageSpecificText="cpp=array&lt;"></span>Init<wbr />Compress<wbr />Function<span id="LST7C9FCAF1_32" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, <span id="LST7C9FCAF1_33" data-languageSpecificText="cpp=array&lt;"></span>Compress<wbr />Function<span id="LST7C9FCAF1_34" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>, Background<wbr />Worker, Do<wbr />Work<wbr />Event<wbr />Args, Boolean, Boolean, String, Int<wbr />32, Algorithm, String, <span id="LST7C9FCAF1_35" data-languageSpecificText="cpp=array&lt;"></span>Store<wbr />Temp<wbr />Debug<wbr />Info<wbr />Function<span id="LST7C9FCAF1_36" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>) Method</h1><div class="summary">
            Starts Optimization
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Metas_UncLib_Optimization.htm">Metas.UncLib.Optimization</a><br /><strong>Assembly:</strong> Metas.UncLib.Optimization (in Metas.UncLib.Optimization.dll) Version: 2.8.8578.19625<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> T[][] <span class="identifier">Start</span>&lt;T&gt;(
	<span class="identifier">ObjectiveFunction</span>&lt;T&gt;[] <span class="parameter">func</span>,
	T[][] <span class="parameter">xStart</span>,
	<span class="identifier">int</span>[][] <span class="parameter">xIds</span>,
	T[][] <span class="parameter">p</span>,
	<span class="identifier">double</span>[][] <span class="parameter">weights</span>,
	<span class="identifier">double</span>[][] <span class="parameter">bndL</span>,
	<span class="identifier">double</span>[][] <span class="parameter">bndU</span>,
	<span class="identifier">double</span> <span class="parameter">epsx</span>,
	<span class="identifier">InitCompressFunction</span>[] <span class="parameter">initCompress</span>,
	<span class="identifier">CompressFunction</span>[] <span class="parameter">compress</span>,
	<span class="identifier">BackgroundWorker</span> <span class="parameter">worker</span>,
	<span class="identifier">DoWorkEventArgs</span> <span class="parameter">e</span>,
	<span class="identifier">bool</span> <span class="parameter">largeProblem</span>,
	<span class="identifier">bool</span> <span class="parameter">covarianceWeighting</span>,
	<span class="identifier">string</span> <span class="parameter">statusText</span>,
	<span class="identifier">int</span> <span class="parameter">statusProgress</span>,
	<span class="identifier">Algorithm</span> <span class="parameter">algorithm</span> = <span class="identifier">Algorithm</span>.LevenbergMarquardt,
	<span class="identifier">string</span> <span class="parameter">fpRecoveryState</span> = <span class="keyword">null</span>,
	<span class="identifier">StoreTempDebugInfoFunction</span>[] <span class="parameter">storeTempDebugInfo</span> = <span class="keyword">null</span>
)
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IRealNumber</span>&lt;T&gt;
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Start</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IRealNumber</span>(<span class="keyword">Of</span> T)}) ( 
	<span class="parameter">func</span> <span class="keyword">As</span> <span class="identifier">ObjectiveFunction</span>(<span class="keyword">Of</span> T)(),
	<span class="parameter">xStart</span> <span class="keyword">As</span> T()(),
	<span class="parameter">xIds</span> <span class="keyword">As</span> <span class="identifier">Integer</span>()(),
	<span class="parameter">p</span> <span class="keyword">As</span> T()(),
	<span class="parameter">weights</span> <span class="keyword">As</span> <span class="identifier">Double</span>()(),
	<span class="parameter">bndL</span> <span class="keyword">As</span> <span class="identifier">Double</span>()(),
	<span class="parameter">bndU</span> <span class="keyword">As</span> <span class="identifier">Double</span>()(),
	<span class="parameter">epsx</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">initCompress</span> <span class="keyword">As</span> <span class="identifier">InitCompressFunction</span>(),
	<span class="parameter">compress</span> <span class="keyword">As</span> <span class="identifier">CompressFunction</span>(),
	<span class="parameter">worker</span> <span class="keyword">As</span> <span class="identifier">BackgroundWorker</span>,
	<span class="parameter">e</span> <span class="keyword">As</span> <span class="identifier">DoWorkEventArgs</span>,
	<span class="parameter">largeProblem</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">covarianceWeighting</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">statusText</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">statusProgress</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	Optional <span class="parameter">algorithm</span> <span class="keyword">As</span> <span class="identifier">Algorithm</span> = <span class="identifier">Algorithm</span>.LevenbergMarquardt,
	Optional <span class="parameter">fpRecoveryState</span> <span class="keyword">As</span> <span class="identifier">String</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">storeTempDebugInfo</span> <span class="keyword">As</span> <span class="identifier">StoreTempDebugInfoFunction</span>() = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> T()()</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IRealNumber</span>&lt;T&gt;
<span class="keyword">static</span> <span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;T&gt;^&gt;^ <span class="identifier">Start</span>(
	<span class="keyword">array</span>&lt;<span class="identifier">ObjectiveFunction</span>&lt;T&gt;^&gt;^ <span class="parameter">func</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;T&gt;^&gt;^ <span class="parameter">xStart</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;<span class="identifier">int</span>&gt;^&gt;^ <span class="parameter">xIds</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;T&gt;^&gt;^ <span class="parameter">p</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;<span class="identifier">double</span>&gt;^&gt;^ <span class="parameter">weights</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;<span class="identifier">double</span>&gt;^&gt;^ <span class="parameter">bndL</span>, 
	<span class="keyword">array</span>&lt;<span class="keyword">array</span>&lt;<span class="identifier">double</span>&gt;^&gt;^ <span class="parameter">bndU</span>, 
	<span class="identifier">double</span> <span class="parameter">epsx</span>, 
	<span class="keyword">array</span>&lt;<span class="identifier">InitCompressFunction</span>^&gt;^ <span class="parameter">initCompress</span>, 
	<span class="keyword">array</span>&lt;<span class="identifier">CompressFunction</span>^&gt;^ <span class="parameter">compress</span>, 
	<span class="identifier">BackgroundWorker</span>^ <span class="parameter">worker</span>, 
	<span class="identifier">DoWorkEventArgs</span>^ <span class="parameter">e</span>, 
	<span class="identifier">bool</span> <span class="parameter">largeProblem</span>, 
	<span class="identifier">bool</span> <span class="parameter">covarianceWeighting</span>, 
	<span class="identifier">String</span>^ <span class="parameter">statusText</span>, 
	<span class="identifier">int</span> <span class="parameter">statusProgress</span>, 
	<span class="identifier">Algorithm</span> <span class="parameter">algorithm</span> = <span class="identifier">Algorithm</span>::LevenbergMarquardt, 
	<span class="identifier">String</span>^ <span class="parameter">fpRecoveryState</span> = <span class="keyword">nullptr</span>, 
	<span class="keyword">array</span>&lt;<span class="identifier">StoreTempDebugInfoFunction</span>^&gt;^ <span class="parameter">storeTempDebugInfo</span> = <span class="keyword">nullptr</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Start</span> : 
        <span class="parameter">func</span> : <span class="identifier">ObjectiveFunction</span>&lt;'T&gt;[] * 
        <span class="parameter">xStart</span> : 'T[][] * 
        <span class="parameter">xIds</span> : <span class="identifier">int</span>[][] * 
        <span class="parameter">p</span> : 'T[][] * 
        <span class="parameter">weights</span> : <span class="identifier">float</span>[][] * 
        <span class="parameter">bndL</span> : <span class="identifier">float</span>[][] * 
        <span class="parameter">bndU</span> : <span class="identifier">float</span>[][] * 
        <span class="parameter">epsx</span> : <span class="identifier">float</span> * 
        <span class="parameter">initCompress</span> : <span class="identifier">InitCompressFunction</span>[] * 
        <span class="parameter">compress</span> : <span class="identifier">CompressFunction</span>[] * 
        <span class="parameter">worker</span> : <span class="identifier">BackgroundWorker</span> * 
        <span class="parameter">e</span> : <span class="identifier">DoWorkEventArgs</span> * 
        <span class="parameter">largeProblem</span> : <span class="identifier">bool</span> * 
        <span class="parameter">covarianceWeighting</span> : <span class="identifier">bool</span> * 
        <span class="parameter">statusText</span> : <span class="identifier">string</span> * 
        <span class="parameter">statusProgress</span> : <span class="identifier">int</span> * 
        ?<span class="parameter">algorithm</span> : <span class="identifier">Algorithm</span> * 
        ?<span class="parameter">fpRecoveryState</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">storeTempDebugInfo</span> : <span class="identifier">StoreTempDebugInfoFunction</span>[] 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">algorithm</span> = defaultArg <span class="identifier">algorithm</span> <span class="identifier">Algorithm</span>.LevenbergMarquardt
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">fpRecoveryState</span> = defaultArg <span class="identifier">fpRecoveryState</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">storeTempDebugInfo</span> = defaultArg <span class="identifier">storeTempDebugInfo</span> <span class="keyword">null</span>
*)
<span class="keyword">-&gt;</span> 'T[][]  <span class="keyword">when</span> 'T : <span class="identifier">Object</span> and <span class="identifier">IRealNumber</span>&lt;'T&gt;</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">func</span>  <span id="LST7C9FCAF1_37" data-languageSpecificText="cpp=array&lt;"></span><a href="T_Metas_UncLib_Optimization_ObjectiveFunction_1.htm">ObjectiveFunction</a><span id="LST7C9FCAF1_38" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST7C9FCAF1_39" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST7C9FCAF1_40" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Objective Function Delegates</dd><dt class="has-text-weight-normal"><span class="parameter">xStart</span>  <span id="LST7C9FCAF1_41" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_42" data-languageSpecificText="cpp=array&lt;"></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST7C9FCAF1_43" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_44" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>x Start Values</dd><dt class="has-text-weight-normal"><span class="parameter">xIds</span>  <span id="LST7C9FCAF1_45" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_46" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a><span id="LST7C9FCAF1_47" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_48" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>x Ids (0: independent)</dd><dt class="has-text-weight-normal"><span class="parameter">p</span>  <span id="LST7C9FCAF1_49" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_50" data-languageSpecificText="cpp=array&lt;"></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST7C9FCAF1_51" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_52" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>p</dd><dt class="has-text-weight-normal"><span class="parameter">weights</span>  <span id="LST7C9FCAF1_53" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_54" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST7C9FCAF1_55" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_56" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Weights (length nof)</dd><dt class="has-text-weight-normal"><span class="parameter">bndL</span>  <span id="LST7C9FCAF1_57" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_58" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST7C9FCAF1_59" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_60" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Lower Bounds</dd><dt class="has-text-weight-normal"><span class="parameter">bndU</span>  <span id="LST7C9FCAF1_61" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_62" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a><span id="LST7C9FCAF1_63" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_64" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Upper Bounds</dd><dt class="has-text-weight-normal"><span class="parameter">epsx</span>  <a href="https://learn.microsoft.com/dotnet/api/system.double" target="_blank" rel="noopener noreferrer">Double</a></dt><dd>Eps x</dd><dt class="has-text-weight-normal"><span class="parameter">initCompress</span>  <span id="LST7C9FCAF1_65" data-languageSpecificText="cpp=array&lt;"></span><a href="T_Metas_UncLib_Optimization_InitCompressFunction.htm">InitCompressFunction</a><span id="LST7C9FCAF1_66" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Init Compress Function Delegates</dd><dt class="has-text-weight-normal"><span class="parameter">compress</span>  <span id="LST7C9FCAF1_67" data-languageSpecificText="cpp=array&lt;"></span><a href="T_Metas_UncLib_Optimization_CompressFunction.htm">CompressFunction</a><span id="LST7C9FCAF1_68" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Compress Function Delegates</dd><dt class="has-text-weight-normal"><span class="parameter">worker</span>  <a href="https://learn.microsoft.com/dotnet/api/system.componentmodel.backgroundworker" target="_blank" rel="noopener noreferrer">BackgroundWorker</a></dt><dd>Background Worker</dd><dt class="has-text-weight-normal"><span class="parameter">e</span>  <a href="https://learn.microsoft.com/dotnet/api/system.componentmodel.doworkeventargs" target="_blank" rel="noopener noreferrer">DoWorkEventArgs</a></dt><dd>Do Work Event Arguments</dd><dt class="has-text-weight-normal"><span class="parameter">largeProblem</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>Large Problem</dd><dt class="has-text-weight-normal"><span class="parameter">covarianceWeighting</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>Covariance Weighting</dd><dt class="has-text-weight-normal"><span class="parameter">statusText</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>Status Text</dd><dt class="has-text-weight-normal"><span class="parameter">statusProgress</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>Status Progress (0 - 100)</dd><dt class="has-text-weight-normal"><span class="parameter">algorithm</span>  <a href="T_Metas_UncLib_Optimization_Algorithm.htm">Algorithm</a>  (Optional)</dt><dd>Algorithm</dd><dt class="has-text-weight-normal"><span class="parameter">fpRecoveryState</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>Recovery State File Path</dd><dt class="has-text-weight-normal"><span class="parameter">storeTempDebugInfo</span>  <span id="LST7C9FCAF1_69" data-languageSpecificText="cpp=array&lt;"></span><a href="T_Metas_UncLib_Optimization_StoreTempDebugInfoFunction.htm">StoreTempDebugInfoFunction</a><span id="LST7C9FCAF1_70" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span>  (Optional)</dt><dd>Store Temp Debug Information Function Delegate</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd>Real Number Type</dd></dl><h4 class="quickLinkHeader">Return Value</h4><span id="LST7C9FCAF1_71" data-languageSpecificText="cpp=array&lt;"></span><span id="LST7C9FCAF1_72" data-languageSpecificText="cpp=array&lt;"></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST7C9FCAF1_73" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LST7C9FCAF1_74" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><br />x Optimized</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_Metas_UncLib_Optimization_BigShaker.htm">BigShaker Class</a></div><div><a href="Overload_Metas_UncLib_Optimization_BigShaker_Start.htm">Start Overload</a></div><div><a href="N_Metas_UncLib_Optimization.htm">Metas.UncLib.Optimization Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://www.metas.ch/vnatools" target="_blank" rel="noopener noreferrer">Copyright © METAS 2011 - 2023</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:vnatools%40metas.ch?Subject=METAS%20VNA%20Tools%20Help">Michael Wollensack</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>